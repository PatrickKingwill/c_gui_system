#ifndef MYHEADER_H
#define MYHEADER_H

#define COLUMNS 102
#define ROWS    64

const char* zeroGui = 
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";

const char* helloWorldGui = 
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<variables>\n"
"    <variable>\n"
"        <name>pageIndex</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"</variables>\n"
"<pages>\n" 
"    <page>\n"
"        <name>0</name>\n"
"        <bitMap>\n"
"         <size>32,32</size>\n"
"         <position>0,0</position>\n"
"         <data>\n"
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n" 
"           1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n" 
"           1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n" 
"           1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"           0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"           0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"           0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"           0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"           0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"           0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"           0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"           0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"         </data>\n"
"        </bitMap>\n"
"    </page>\n"
"    <page>\n"
"        <name>1</name>\n"
"        <text>\n"
"            <font>jupiter</font>\n"
"            <font-size>19</font-size>\n"
"            <alignment>center</alignment>\n"
"            <vert-alignment>center</vert-alignment>\n"
"            <position>32,51</position>\n"
"            <content>\"Hello World!\"</content>\n"
"        </text>\n"
"    </page>\n"
"</pages>";


const char* advanced_gui = 
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<variables>\n"
"    <variable>\n"
"        <name>pageIndex</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>cursor</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>pull_power</name>\n"
"        <type>int32_t</type>\n"
"        <value>20</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>inc</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"</variables>\n"
"<pages>\n" 
"    <page>\n"
"        <name>1</name>\n"
"        <text>\n"
"            <font>jupiter</font>\n"
"            <font-size>19</font-size>\n"
"            <alignment>left</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>0,0</position>\n"
"            <content>\"READY!\"</content>\n"
"        </text>\n"
"        <text>\n"
"            <font>jupiter</font>\n"
"            <font-size>19</font-size>\n"
"            <alignment>left</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>30,0</position>\n"
"            <content>\"Service Due\"</content>\n"
"        </text>\n"
"    </page>\n"
"    <page>\n"
"        <name>2</name>\n"
"        <list>\n"
"         <cursor><var>cursor</var></cursor>\n"
"         <font>jupiter</font>\n"
"         <font-size>19</font-size>\n"
"         <position>0,0</position>\n"
"         <options>1.Set-up\n2.Fast Set\n3.Slow Set\n4.Max Pull\n5.Max Break</options>\n"
"        </list>\n"
"    </page>\n"
"    <page>\n"
"        <name>3</name>\n"
"           <intEntry>\n"
"            <cursor><var>cursor</var></cursor>\n"
"            <incrementer><var>inc</var></incrementer>\n"
"            <font>_5pt</font>\n"
"            <font-size>10</font-size>\n"
"            <position>0,0</position>\n"
"            <heading>Set Pull Power</heading>\n"
"            <digits>3</digits>\n"
"            <max>25</max>\n"
"            <min>0</min>\n"
"            <variable><var>pull_power</var></variable>\n"
"           </intEntry>\n"
"    </page>\n"
"</pages>\n\0";

const char* singleVarGui = 
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<variables>\n"
"    <variable>\n"
"        <name>pageIndex</name>\n"
"        <type>int32_t</type>\n"
"        <value>55</value>\n"
"    </variable>\n"
"</variables>\n";

const char * justABitmap =
"<bitMap>\n"
" <size>32,32</size>\n"
" <position>0,0</position>\n"
" <data>\n"
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"   0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
" </data>\n"
"</bitMap>\n";

const char * ABitmap_negitivePosition =
"<bitMap>\n"
" <size>32,32</size>\n"
" <position>-12,-5</position>\n"
" <data>\n"      //^ -5  
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" // -12
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"   0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
" </data>\n"
"</bitMap>\n";

const char * ABitmap_postivePosition =
"<bitMap>\n"
" <size>32,32</size>\n"
" <position>49,87</position>\n"
" <data>\n"      
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n" 
"   1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"   0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n" 
"   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
"   0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n" 
" </data>\n"
"</bitMap>\n";

const char * ABitmap_singleOne =
"<bitMap>\n"
" <size>2,2</size>\n"
" <position>62,100</position>\n"
" <data>\n"      
"   1, 1,\n"
"   1, 1,\n"
" </data>\n"
"</bitMap>\n";

const char * text_HelloWorld =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>center</alignment>\n"
"    <vert-alignment>center</vert-alignment>\n"
"    <position>32,51</position>\n"
"    <content>\"Hello World!\"</content>\n"
"</text>\n";

const char * text_HelloWorld_left =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>32,51</position>\n"
"    <content>\"Hello World!\"</content>\n"
"</text>\n";

const char * text_HelloWorld_right =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>right</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>32,51</position>\n"
"    <content>\"Hello World!\"</content>\n"
"</text>\n";
const char * text_HelloWorld_multiline=
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>0,0</position>\n"
"    <content>\"Hello World!\nHow Are You?\"</content>\n"
"</text>\n";

const char * text_HelloWorld_sans =
"<text>\n"
"    <font>sans</font>\n"
"    <font-size>12</font-size>\n"
"    <alignment>center</alignment>\n"
"    <vert-alignment>center</vert-alignment>\n"
"    <position>32,51</position>\n"
"    <content>\"HELLO WORLD\"</content>\n"
"</text>\n";

const char * text_HelloWorld_top =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>center</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>32,51</position>\n"
"    <content>\"HELLO WORLD!\"</content>\n"
"</text>\n";

const char * text_HelloWorld_bottom =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>center</alignment>\n"
"    <vert-alignment>bottom</vert-alignment>\n"
"    <position>32,51</position>\n"
"    <content>\"HELLO WORLD!\"</content>\n"
"</text>\n";

const char * text_HelloWorld_invert =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <invert>1</invert>\n"
"    <position>0,0</position>\n"
"    <content>\"HELLO WORLD!\"</content>\n"
"</text>\n";

const char * text_HelloWorld_var_invert =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <invert><var>invert</var>\n</invert>\n"
"    <position>0,0</position>\n"
"    <content>\"HELLO WORLD!\"</content>\n"
"</text>\n";


const char * text_HelloWorld_one =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>0,0</position>\n"
"    <content>\"one: \%d\",1</content>\n"
"</text>\n";

const char * text_HelloWorld_one_pt_2 =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>0,0</position>\n"
"    <content>\"one: \%.1f\",1.2</content>\n"
"</text>\n";

const char * text_with_int_units =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>0,0</position>\n"
"    <content>\"\%.1f V\",<var>variable</var></content>\n"
"</text>\n";

const char * text_HelloWorld_one_var =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>0,0</position>\n"
"    <content>\"one: \%d\",<var>test1</var></content>\n"
"</text>\n";
const char * text_HelloWorld_one_pt_2_var =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>0,0</position>\n"
"    <content>\"one: \%.1f\",<var>test1</var></content>\n"
"</text>\n";

const char * text_HelloWorld_moveable =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>center</alignment>\n"
"    <vert-alignment>center</vert-alignment>\n"
"    <position><var>xPos</var>,<var>yPos</var></position>\n"
"    <content>\"Hello World!\"</content>\n"
"</text>\n";

const char * just_one_var =
"<text>\n"
"    <font>jupiter</font>\n"
"    <font-size>19</font-size>\n"
"    <alignment>left</alignment>\n"
"    <vert-alignment>top</vert-alignment>\n"
"    <position>0,0</position>\n"
"    <content>\"\%d\",1</content>\n"
"</text>\n";

const char * operand_equal=
"<operand>\n"
" <if>\n"
"    <operation>\"equal\"</operation>"
"    <var>test1</var>\n"
"    <value>10</value>\n"
" </if>\n"
" <then>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test1</var>\n"
"    <value>2</value>\n"
" </then>\n"
" <else>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test1</var>\n"
"    <value>6</value>\n"
" </else>\n"
"</operand>\n";

const char * operand_equal_two_var=
"<operand>\n"
" <if>\n"
"    <operation>\"equal\"</operation>"
"    <var>test1</var>\n"
"    <var>test2</var>\n"
" </if>\n"
" <then>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test1</var>\n"
"    <value>2</value>\n"
" </then>\n"
" <else>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test1</var>\n"
"    <value>6</value>\n"
" </else>\n"
"</operand>\n";

const char * operand_equal_no_else=
"<operand>\n"
" <if>\n"
"    <operation>\"equal\"</operation>"
"    <var>test1</var>\n"
"    <value>10</value>\n"
" </if>\n"
" <then>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test1</var>\n"
"    <value>2</value>\n"
" </then>\n"
"</operand>\n";


const char * operand_equal_dual_var_out=
"<operand>\n"
" <if>\n"
"    <operation>\"equal\"</operation>"
"    <var>test1</var>\n"
"    <value>10</value>\n"
" </if>\n"
" <then>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test1</var>\n"
"    <var>test2</var>\n"
" </then>\n"
" <else>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test1</var>\n"
"    <var>test2</var>\n"
" </else>\n"
"</operand>\n";

const char * operand_equal_many_thens=
"<operand>\n"
" <if>\n"
"    <operation>\"equal\"</operation>"
"    <var>test1</var>\n"
"    <value>10</value>\n"
" </if>\n"
" <then>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test1</var>\n"
"    <var>test2</var>\n"
" </then>\n"
" <then>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test2</var>\n"
"    <value>22</value>\n"
" </then>\n"
"</operand>\n";

const char * operand_equal_early_stop=
"<operand>\n"
" <if>\n"
"    <operation>\"equal\"</operation>"
"    <var>test1</var>\n"
"    <value>10</value>\n"
" </if>\n"
"</operand>\n"
" <then>\n"
"    <do>\"set-equal\"</do>\n"
"    <var>test1</var>\n"
"    <value>80</value>\n"
" </then>\n";


const char* gui_with_operand = 
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<variables>\n"
"    <variable>\n"
"        <name>pageIndex</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"</variables>\n"
"<pages>\n" 
"    <page>\n"
"        <name>1</name>\n"
"        <operand>\n"
"           <if>\n"
"              <operation>\"equal\"</operation>"
"              <var>test1</var>\n"
"              <value>10</value>\n"
"           </if>\n"
"           <then>\n"
"           <do>\"set-equal\"</do>\n"
"              <var>test1</var>\n"
"              <value>2</value>\n"
"           </then>\n"
"           <else>\n"
"              <do>\"set-equal\"</do>\n"
"              <var>test1</var>\n"
"              <value>6</value>\n"
"           </else>\n"
"        </operand>\n"
"        <text>\n"
"            <font>jupiter</font>\n"
"            <font-size>19</font-size>\n"
"            <alignment>center</alignment>\n"
"            <vert-alignment>center</vert-alignment>\n"
"            <position>32,51</position>\n"
"            <content>\"Hello World!\"</content>\n"
"        </text>\n"
"    </page>\n"
"</pages>";

const char * operand_increment=
"<operand>\n"
" <if>\n"
"    <operation>\"equal\"</operation>"
"    <var>test1</var>\n"
"    <value>10</value>\n"
" </if>\n"
" <then>\n"
"    <do>\"add\"</do>\n"
"    <var>test1</var>\n"
"    <value>2</value>\n"
" </then>\n"
" <else>\n"
"    <do>\"minus\"</do>\n"
"    <var>test1</var>\n"
"    <value>3</value>\n"
" </else>\n"
"</operand>\n";

const char * operand_less_than=
"<operand>\n"
" <if>\n"
"    <operation>\"less-than\"</operation>"
"    <var>test1</var>\n"
"    <value>11</value>\n"
" </if>\n"
" <then>\n"
"    <do>\"add\"</do>\n"
"    <var>test1</var>\n"
"    <value>2</value>\n"
" </then>\n"
"</operand>\n";

const char * operand_greater_than=
"<operand>\n"
" <if>\n"
"    <operation>\"greater-than\"</operation>"
"    <var>test1</var>\n"
"    <value>11</value>\n"
" </if>\n"
" <then>\n"
"    <do>\"add\"</do>\n"
"    <var>test1</var>\n"
"    <value>2</value>\n"
" </then>\n"
"</operand>\n";

const char * normal_list=
"<list>\n"
" <cursor><var>cursor</var></cursor>\n"
" <font>jupiter</font>\n"
" <font-size>19</font-size>\n"
" <position>0,0</position>\n"
" <options>1.Set-up\n2.Fast Set\n3.Slow Set\n4.Max Pull\n5.Max Break</options>\n"
"</list>\n";

const char * small_text_list=
"<list>\n"
" <cursor><var>cursor</var></cursor>\n"
" <font>_5pt</font>\n"
" <font-size>15</font-size>\n"
" <position>0,0</position>\n"
" <options>1.Set-up\n2.Fast Set\n3.Slow Set\n4.Max Pull\n5.Max Break</options>\n"
"</list>\n";

const char * enter_var_set_page=
"<intEntry>\n"
" <cursor><var>cursor</var></cursor>\n"
" <incrementer><var>inc</var></incrementer>\n"
" <font>_5pt</font>\n"
" <font-size>10</font-size>\n"
" <position>0,0</position>\n"
" <heading>Set Pull Power</heading>\n"
" <digits>2</digits>\n"
" <max>20</max>\n"
" <min>0</min>\n"
" <variable><var>pull_power</var></variable>\n"
"</intEntry>\n";

const char * enter_var_set_page_big_min_max=
"<intEntry>\n"
" <cursor><var>cursor</var></cursor>\n"
" <incrementer><var>inc</var></incrementer>\n"
" <font>_5pt</font>\n"
" <font-size>10</font-size>\n"
" <position>0,0</position>\n"
" <heading>Set Pull Power</heading>\n"
" <digits>3</digits>\n"
" <max>25</max>\n"
" <min>0</min>\n"
" <variable><var>pull_power</var></variable>\n"
"</intEntry>\n";

const char * bsr_bug_page_500_display =
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<variables>\n"
"    <variable>\n"
"        <name>pageIndex</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"    <variable>\n"
"        <name>serviceHours</name>\n"
"        <type>int32_t</type>\n"
"        <value>500</value>\n"
"    </variable>\n"
"<pages>\n"
"    <page>\n"
"        <name>boot</name>\n"
"        <text>\n"
"            <font>_5pt</font>\n"
"            <font-size>15</font-size>\n"
"            <alignment>center</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>5,51</position>\n"
"            <content>\"LEFT REEL\"</content>\n"
"        </text>\n"
"        <text>\n"
"            <font>_5pt</font>\n"
"            <font-size>15</font-size>\n"
"            <alignment>center</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>20,51</position>\n"
"            <content>\"READY!\"</content>\n"
"        </text>\n"
"        <text>\n"
"            <font>_5pt</font>\n"
"            <font-size>15</font-size>\n"
"            <alignment>center</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>35,51</position>\n"
"            <content>\"SERVICE DUE\"</content>\n"
"        </text>\n"
"        <text>\n"
"            <font>_5pt</font>\n"
"            <font-size>15</font-size>\n"
"            <alignment>center</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>50,51</position>\n"
"            <content>\" HRS: \%d \",<var>serviceHours</var></content>\n"
"        </text>\n"
"    </page>\n"
"</pages>";


const char *bsr_bug_multi_text_indent = 
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<variables>\n"
"    <variable>\n"
"        <name>pageIndex</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"    <variable>\n"
"        <name>serviceHours</name>\n"
"        <type>int32_t</type>\n"
"        <value>500</value>\n"
"    </variable>\n"
"<pages>\n"
"    <page>\n"
"        <name>engine_hours</name>\n"
"        <text>\n"
"            <font>_5pt</font>\n"
"            <font-size>15</font-size>\n"
"            <alignment>center</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>5,51</position>\n"
"            <content>\"Engine Hours\"</content>\n"
"        </text>\n"
"        <text>\n"
"            <font>_5pt</font>\n"
"            <font-size>15</font-size>\n"
"            <alignment>left</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>20,0</position>\n"
"            <content>\" Service: 0 \"</content>\n"
"        </text>\n"
"        <text>\n"
"            <font>_5pt</font>\n"
"            <font-size>15</font-size>\n"
"            <alignment>left</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>35,0</position>\n"
"            <content>\" Service: 0 \"</content>\n"
"        </text>\n"
"    </page>\n"
"</pages>";

const char *bsr_bug_hard_fault = 
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<variables>\n"
"    <variable>\n"
"        <name>pageIndex</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"    <variable>\n"
"        <name>service_hours</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>total_hours</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>pump_service</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>user_pull</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>max_pull</name>\n"
"        <type>int32_t</type>\n"
"        <value>5</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>passcode</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>voltage</name>\n"
"        <type>float</type>\n"
"        <value>1.1</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>cursor</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"    <variable>\n"
"        <name>inc</name>\n"
"        <type>int32_t</type>\n"
"        <value>0</value>\n"
"    </variable>\n"
"</variables>\n"
"<pages>\n"
"    <page>\n"
"        <name>voltage_disp</name>\n"
"        <text>\n"
"            <font>_5pt</font>\n"
"            <font-size>15</font-size>\n"
"            <alignment>center</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>5,51</position>\n"
"            <content>\"Voltage\"</content>\n"
"        </text>\n"
"        <text>\n"
"            <font>_5pt</font>\n"
"            <font-size>15</font-size>\n"
"            <alignment>left</alignment>\n"
"            <vert-alignment>top</vert-alignment>\n"
"            <position>20,0</position>\n"
"            <content>\"V:\%.1f\n\",<var>voltage</var></content>\n"
"        </text>\n"
"    </page>\n"
"</pages>";
#endif
